import * as _nextui_org_system from '@nextui-org/system';
import { ReactElement, ReactNode, HTMLAttributes } from 'react';
import { GroupDOMAttributes } from '@react-types/shared';

interface ValidationResult {
    /** Whether the input value is invalid. */
    isInvalid: boolean;
    /** The current error messages for the input if it is invalid, otherwise an empty array. */
    validationErrors: string[];
    /** The native validation details for the input. */
    validationDetails: ValidityState;
}
interface DateInputGroupProps extends ValidationResult {
    children?: ReactElement | ReactElement[];
    shouldLabelBeOutside?: boolean;
    label?: ReactNode;
    startContent?: React.ReactNode;
    endContent?: React.ReactNode;
    groupProps?: GroupDOMAttributes;
    wrapperProps?: HTMLAttributes<HTMLElement>;
    helperWrapperProps?: HTMLAttributes<HTMLElement>;
    labelProps?: HTMLAttributes<HTMLElement>;
    descriptionProps?: HTMLAttributes<HTMLElement>;
    errorMessageProps?: HTMLAttributes<HTMLElement>;
    /** A description for the field. Provides a hint such as specific requirements for what to choose. */
    description?: ReactNode;
    /** An error message for the field. */
    errorMessage?: ReactNode | ((v: ValidationResult) => ReactNode);
}
declare const DateInputGroup: _nextui_org_system.InternalForwardRefRenderFunction<"div", DateInputGroupProps, never>;

export { DateInputGroup, DateInputGroupProps, ValidationResult };
